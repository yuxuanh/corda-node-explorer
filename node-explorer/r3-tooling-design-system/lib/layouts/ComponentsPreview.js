var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState, useRef, useEffect } from 'react';
import logoSrc from '../assets/img/logo--r3.svg';
import cardImage from '../assets/img/img--card--example.png';
import { Accordion, Alert, Badge, Anchor, AnchorLink, BottomBar, BreadcrumbItem, Breadcrumbs, Button, Card, Checkbox, CodeSnippet, Container, Column, DateInput, DateTimeInput, DownloadFile, Drawer, Dropdown, EmailInput, EmptyState, FileUpload, Form, FormGroup, IconButton, IconCustom, Loader, Modal, MultiSelect, NotificationService, NumberInput, Option, PageHeader, Pagination, PasswordInput, PhoneInput, Popconfirm, ProgressIndicator, RadioButton, RadioGroup, Row, Select, Skeleton, Slider, Snackbar, snackbarIdContext, SideBar, SideBarItem, Tab, Tabs, Textarea, TextInput, TimeInput, Toast, toastIdContext, Toggle, Tooltip, TooltipWrapper, TopNavBar, Typography, DashboardItem, } from '../exports';
var ExamplesComponent = function () {
    var _a = useState(true), checkboxOne = _a[0], setCheckboxOne = _a[1];
    var _b = useState(false), checkboxTwo = _b[0], setCheckboxTwo = _b[1];
    var isActiveSideBarItem = useState(true)[0];
    var _c = useState(true), toggleGraySmall = _c[0], setToggleGraySmall = _c[1];
    var _d = useState(true), toggleGraySmallDe = _d[0], setToggleGraySmallDe = _d[1];
    var _e = useState(false), toggleRedSmall = _e[0], setToggleRedSmall = _e[1];
    var _f = useState(false), toggleRedSmallDe = _f[0], setToggleRedSmallDe = _f[1];
    var _g = useState(false), toggleGrayBig = _g[0], setToggleGrayBig = _g[1];
    var _h = useState(false), toggleGrayBigDe = _h[0], setToggleGrayBigDe = _h[1];
    var _j = useState(true), toggleRedBig = _j[0], setToggleRedBig = _j[1];
    var _k = useState(true), toggleRedBigDe = _k[0], setToggleRedBigDe = _k[1];
    var _l = useState(''), selectedRadio = _l[0], setSelectedRadio = _l[1];
    var _m = useState(false), radioInvalid = _m[0], setRadioInvalid = _m[1];
    var _o = useState(''), textValue = _o[0], setTextValue = _o[1];
    var _p = useState(''), numberValue = _p[0], setNumberValue = _p[1];
    var _q = useState(''), emailValue = _q[0], setEmailValue = _q[1];
    var _r = useState(''), passwordValue = _r[0], setPasswordValue = _r[1];
    var _s = useState(new Date()), dateValue = _s[0], setDateValue = _s[1];
    var _t = useState(null), dateTimeValue = _t[0], setDateTimeValue = _t[1];
    var _u = useState(new Date()), timeValue = _u[0], setTimeValue = _u[1];
    var _v = useState(''), fileName = _v[0], setFileName = _v[1];
    var _w = useState(null), fileProgress = _w[0], setFileProgress = _w[1];
    var _x = useState(''), phoneValue = _x[0], setPhoneValue = _x[1];
    var _y = useState(''), textareaValue = _y[0], setTextareaValue = _y[1];
    var _z = useState(''), selectValue = _z[0], setSelectValue = _z[1];
    var _0 = useState([
        'one',
        'two',
        'one',
        'four',
    ]), multiselectValue = _0[0], setMultiselectValue = _0[1];
    var _1 = useState('50'), sliderValue = _1[0], setSliderValue = _1[1];
    var _2 = useState(false), modalOneShow = _2[0], setModalOneShow = _2[1];
    var _3 = useState(false), modalTwoShow = _3[0], setModalTwoShow = _3[1];
    var _4 = useState(false), modalThreeShow = _4[0], setModalThreeShow = _4[1];
    var _5 = useState(false), modalFourShow = _5[0], setModalFourShow = _5[1];
    var _6 = useState(false), modalFiveShow = _6[0], setModalFiveShow = _6[1];
    var _7 = useState(false), modalSixShow = _7[0], setModalSixShow = _7[1];
    var _8 = useState(false), modalSevenShow = _8[0], setModalSevenShow = _8[1];
    var _9 = useState(false), modalEightShow = _9[0], setModalEightShow = _9[1];
    var _10 = useState(false), drawerTopShow = _10[0], setDrawerTopShow = _10[1];
    var _11 = useState(false), drawerRightShow = _11[0], setDrawerRightShow = _11[1];
    var _12 = useState(false), drawerBottomShow = _12[0], setDrawerBottomShow = _12[1];
    var _13 = useState(false), drawerLeftShow = _13[0], setDrawerLeftShow = _13[1];
    var _14 = useState(1), currentPage = _14[0], setCurrentPage = _14[1];
    var _15 = useState(false), passwordTooltip = _15[0], setPasswordTooltip = _15[1];
    var _16 = useState(false), popconfirmShowing = _16[0], setPopconfirmShowing = _16[1];
    var _17 = useState(false), popconfirmTwo = _17[0], setPopconfirmTwo = _17[1];
    var errorToast = (_jsxs(Toast, __assign({ context: NotificationService, variant: "danger", title: "Error" }, { children: ["Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.", _jsx(toastIdContext.Consumer, { children: function (value) { return (_jsxs("div", __assign({ className: "flex mt-4" }, { children: [_jsx(Button, __assign({ size: "small", variant: "label", noPaddingFocus: true, className: "mr-6", onClick: function () { return NotificationService.dismiss(value); } }, { children: "Cancel" }), void 0), _jsx(Button, __assign({ size: "small", variant: "labeldanger", noPaddingFocus: true }, { children: "Delete" }), void 0)] }), void 0)); } }, void 0)] }), void 0));
    var infoToast = (_jsx(Toast, __assign({ context: NotificationService, variant: "info", title: "Info" }, { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }), void 0));
    var infoSnackbar = (_jsx(Snackbar, __assign({ context: NotificationService, variant: "info", withIcon: true, button: _jsx(snackbarIdContext.Consumer, { children: function (value) { return (_jsxs(Button, __assign({ size: "small", variant: "tertiary", noPaddingFocus: true, onClick: function () { return NotificationService.dismiss(value); } }, { children: ["Undo", ' '] }), void 0)); } }, void 0) }, { children: "Info Snackbar" }), void 0));
    var warningSnackbar = (_jsx(Snackbar, __assign({ variant: "warning", withIcon: true }, { children: "Warning Snackbar" }), void 0));
    var errorSnackbar = (_jsx(Snackbar, __assign({ context: NotificationService, variant: "danger", button: _jsx(snackbarIdContext.Consumer, { children: function (value) { return (_jsxs("div", __assign({ className: "flex" }, { children: [_jsxs(Button, __assign({ size: "small", variant: "labeldanger", noPaddingFocus: true, className: "mr-8", onClick: function () { return NotificationService.dismiss(value); } }, { children: ["Undo", ' '] }), void 0), _jsx(Button, __assign({ size: "small", variant: "label", noPaddingFocus: true }, { children: "Cancel" }), void 0)] }), void 0)); } }, void 0) }, { children: "Danger Snackbar" }), void 0));
    var successSnackbar = _jsx(Snackbar, __assign({ variant: "success" }, { children: "Success Snackbar" }), void 0);
    var tabLink = (_jsx(Tab, { name: _jsx("a", __assign({ href: "https://www.google.com" }, { children: "Content" }), void 0) }, "tabLink"));
    var tabLinkTwo = (_jsx(Tab, { name: _jsx("a", __assign({ href: "https://www.bing.com" }, { children: "Content 2" }), void 0) }, "tabLinkTwo"));
    var logo = (_jsx("a", __assign({ href: "#" }, { children: _jsx("img", { src: logoSrc, alt: "logo-alt-txt", width: "33px" }, void 0) }), void 0));
    var submitHandler = function (event) {
        event.preventDefault();
        selectedRadio === '' && setRadioInvalid(true);
    };
    var clearRadioError = function (value) {
        setSelectedRadio(value);
        setRadioInvalid(false);
    };
    var uploadFile = function (event) {
        setFileName(event.target.value);
        var _loop_1 = function (i) {
            setTimeout(function () { return setFileProgress(i); }, 200);
        };
        for (var i = 1; i < 101; i++) {
            _loop_1(i);
        }
    };
    var openModal = function (event, func) {
        event.preventDefault();
        func(true);
    };
    var pageRef = useRef(null);
    var _18 = useState(pageRef.current), pageRefCurrent = _18[0], setPageRefCurrent = _18[1];
    useEffect(function () {
        setPageRefCurrent(pageRef.current);
    }, []);
    return (_jsxs(Container, __assign({ fluid: true }, { children: [_jsxs(TopNavBar, __assign({ className: "fixed top-0 z-20", logo: logo, title: "tooling design system" }, { children: ["text", _jsx(IconCustom, { icon: "Magnify", className: "h-5" }, void 0), _jsxs(Dropdown, __assign({ positionX: "left", positionY: "bottom", closeOnSelectOption: true, trigger: _jsx(IconCustom, { icon: "Account", className: "h-5" }, void 0) }, { children: [_jsx(Option, __assign({ value: "one" }, { children: "One" }), void 0), _jsx(Option, __assign({ value: "two" }, { children: "Two" }), void 0), _jsx(Option, __assign({ value: "three" }, { children: "Three" }), void 0), _jsx(Option, __assign({ value: "four" }, { children: "Four" }), void 0), _jsx(Option, __assign({ value: "five" }, { children: "Five" }), void 0), _jsx(Option, __assign({ value: "six" }, { children: "Six" }), void 0), _jsx(Option, __assign({ value: "seven" }, { children: "Seven" }), void 0)] }), void 0), "text", _jsx(IconCustom, { icon: "ExitToApp", className: "h-5" }, void 0)] }), void 0), _jsxs(TopNavBar, __assign({ logo: logo, title: "tooling design system", center: _jsxs(_Fragment, { children: [_jsx("a", __assign({ rel: "noopener noreferrer", href: "/#" }, { children: "home" }), void 0), _jsx("a", __assign({ rel: "noopener noreferrer", href: "/#" }, { children: "services" }), void 0), _jsx("a", __assign({ rel: "noopener noreferrer", href: "/#" }, { children: "about us" }), void 0), _jsx("a", __assign({ rel: "noopener noreferrer", href: "/#" }, { children: "contact us" }), void 0)] }, void 0), centerPos: "start" }, { children: [_jsx(Button, __assign({ size: "small", variant: "primary" }, { children: "primary" }), void 0), _jsx(IconCustom, { icon: "Magnify", className: "h-5" }, void 0), _jsxs(Dropdown, __assign({ positionX: "left", positionY: "bottom", closeOnSelectOption: true, trigger: _jsx(IconCustom, { icon: "Account", className: "h-5" }, void 0) }, { children: [_jsx(Option, __assign({ value: "one" }, { children: "One" }), void 0), _jsx(Option, __assign({ value: "two" }, { children: "Two" }), void 0), _jsx(Option, __assign({ value: "three" }, { children: "Three" }), void 0), _jsx(Option, __assign({ value: "four" }, { children: "Four" }), void 0), _jsx(Option, __assign({ value: "five" }, { children: "Five" }), void 0), _jsx(Option, __assign({ value: "six" }, { children: "Six" }), void 0), _jsx(Option, __assign({ value: "seven" }, { children: "Seven" }), void 0)] }), void 0), _jsx(IconCustom, { icon: "ExitToApp", className: "h-5" }, void 0)] }), void 0), _jsxs(SideBar, __assign({ toggable: true }, { children: [_jsxs(SideBarItem, __assign({ icon: "CalendarAlert", title: "Test 1" }, { children: [_jsxs(SideBarItem, __assign({ icon: "CalendarAlert", title: "Test 1.1" }, { children: [_jsx(SideBarItem, { icon: "RobotExcitedOutline", title: _jsx("a", __assign({ rel: "noopener noreferrer", target: "_blank", href: "https://google.com" }, { children: "Test 1.1.1 - Link to Google" }), void 0) }, void 0), _jsx(SideBarItem, __assign({ icon: "Twitter", title: "Test 1.1.2" }, { children: _jsx(SideBarItem, { title: "Test 1.1.2.1", active: isActiveSideBarItem }, void 0) }), void 0)] }), void 0), _jsx(SideBarItem, __assign({ icon: "CalendarAlert", title: "Test 1.2" }, { children: _jsx(SideBarItem, { title: "Test 1.2.1" }, void 0) }), void 0)] }), void 0), _jsxs(SideBarItem, __assign({ icon: "Resize", title: "Test 2" }, { children: [_jsx(SideBarItem, __assign({ title: "Test 2.1" }, { children: _jsx(SideBarItem, { icon: "RobotExcitedOutline", title: "Test 2.1.1" }, void 0) }), void 0), _jsx(SideBarItem, __assign({ title: "Test 2.2" }, { children: _jsx(SideBarItem, { icon: "RobotExcitedOutline", active: isActiveSideBarItem, title: "Test 2.2.1" }, void 0) }), void 0)] }), void 0), _jsx(SideBarItem, { icon: "MapMarkerOutline", title: "Test 3" }, void 0), _jsx(SideBarItem, { icon: "CropRotate", title: "Test 4" }, void 0), _jsx(SideBarItem, { icon: "FolderPound", title: "Test 5" }, void 0), _jsx(SideBarItem, { icon: "RobotExcitedOutline", title: _jsx("a", __assign({ rel: "noopener noreferrer", target: "_blank", href: "https://google.com" }, { children: "Link" }), void 0) }, void 0)] }), void 0), _jsxs("div", __assign({ className: "ml-20" }, { children: [_jsx("div", __assign({ className: "h-16 bg-green", ref: pageRef }, { children: "Example offsetting div" }), void 0), _jsx(PageHeader, __assign({ size: "large" }, { children: "Lorem ipsum" }), void 0), _jsx(PageHeader, __assign({ sticky: true, offset: 64, size: "large", dark: true, tabs: [tabLink, tabLinkTwo] }, { children: "Lorem ipsum" }), void 0), _jsxs(Breadcrumbs, { children: [_jsx(BreadcrumbItem, { children: "Example" }, void 0), _jsx(BreadcrumbItem, { children: "Example" }, void 0), _jsx(BreadcrumbItem, __assign({ active: true }, { children: "Example" }), void 0)] }, void 0), _jsx(Breadcrumbs, {}, void 0), _jsxs(Container, { children: [_jsxs(Row, { children: [_jsxs(Column, __assign({ cols: 4 }, { children: [_jsx(Button, __assign({ variant: "primary", size: "large", isLink: true, target: "_blank", to: "http://google.com", iconRight: "Share" }, { children: "GOOGLE" }), void 0), _jsx(Button, __assign({ variant: "primary", size: "large", disabled: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "secondary", size: "large", iconLeft: "Download" }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "secondary", size: "large", disabled: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "primary", size: "small", iconRight: "Share" }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "primary", size: "small", disabled: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "secondary", size: "small", iconLeft: "Download" }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "secondary", size: "small", disabled: true }, { children: "Button" }), void 0)] }), void 0), _jsxs(Column, __assign({ cols: 4 }, { children: [_jsx(Button, __assign({ variant: "tertiary", size: "large" }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "tertiary", size: "large", disabled: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "label", size: "large" }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "label", size: "large", disabled: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "tertiary", size: "small" }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "tertiary", size: "small", disabled: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "label", size: "small" }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "label", size: "small", disabled: true }, { children: "Button" }), void 0)] }), void 0), _jsxs(Column, __assign({ cols: 4 }, { children: [_jsx(Button, __assign({ variant: "warning", size: "large" }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "warning", size: "large", disabled: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "danger", size: "large" }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "danger", size: "large", disabled: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "warning", size: "small" }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "warning", size: "small", disabled: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "danger", size: "small" }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "danger", size: "small", disabled: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "labeldanger", size: "large" }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "labeldanger", size: "large", disabled: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "labeldanger", size: "small" }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "labeldanger", size: "small", disabled: true }, { children: "Button" }), void 0)] }), void 0)] }, void 0), _jsxs(Row, { children: [_jsxs(Column, __assign({ cols: 4 }, { children: [_jsx(IconButton, { variant: "primary", size: "large", isLink: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "primary", size: "large", isLink: true, disabled: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "secondary", size: "large", isLink: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "secondary", size: "large", isLink: true, disabled: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "tertiary", size: "large", isLink: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "tertiary", size: "large", isLink: true, disabled: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "label", size: "large", isLink: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "label", size: "large", isLink: true, disabled: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "warning", size: "large", isLink: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "warning", size: "large", isLink: true, disabled: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "danger", size: "large", isLink: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "danger", size: "large", isLink: true, disabled: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "labeldanger", size: "large", isLink: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "labeldanger", size: "large", isLink: true, disabled: true, icon: "Twitter" }, void 0)] }), void 0), _jsxs(Column, __assign({ cols: 4 }, { children: [_jsx(IconButton, { variant: "primary", size: "medium", isLink: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "primary", size: "medium", isLink: true, disabled: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "secondary", size: "medium", icon: "Minus" }, void 0), _jsx(IconButton, { variant: "secondary", size: "medium", isLink: true, disabled: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "tertiary", size: "medium", icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "tertiary", size: "medium", isLink: true, disabled: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "label", size: "medium", isLink: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "label", size: "medium", isLink: true, disabled: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "warning", size: "medium", isLink: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "warning", size: "medium", isLink: true, disabled: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "danger", size: "medium", isLink: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "danger", size: "medium", isLink: true, disabled: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "labeldanger", size: "medium", isLink: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "labeldanger", size: "medium", isLink: true, disabled: true, icon: "Twitter" }, void 0)] }), void 0), _jsxs(Column, __assign({ cols: 4 }, { children: [_jsx(IconButton, { variant: "icon", size: "small", isLink: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "icon", size: "small", isLink: true, disabled: true, icon: "Twitter" }, void 0)] }), void 0)] }, void 0), _jsxs(Row, __assign({ className: "bg-dark-gray" }, { children: [_jsxs(Column, __assign({ cols: 4 }, { children: [_jsx(Button, __assign({ variant: "primary", size: "large", iconRight: "Share", dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "primary", size: "large", disabled: true, dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "secondary", size: "large", iconLeft: "Download", dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "secondary", size: "large", disabled: true, dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "primary", size: "small", iconRight: "Share", dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "primary", size: "small", disabled: true, dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "secondary", size: "small", iconLeft: "Download", dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "secondary", size: "small", disabled: true, dark: true }, { children: "Button" }), void 0)] }), void 0), _jsxs(Column, __assign({ cols: 4 }, { children: [_jsx(Button, __assign({ variant: "tertiary", size: "large", dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "tertiary", size: "large", disabled: true, dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "label", size: "large", dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "label", size: "large", disabled: true, dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "tertiary", size: "small", dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "tertiary", size: "small", disabled: true, dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "label", size: "small", dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "label", size: "small", disabled: true, dark: true }, { children: "Button" }), void 0)] }), void 0), _jsxs(Column, __assign({ cols: 4 }, { children: [_jsx(Button, __assign({ variant: "warning", size: "large", dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "warning", size: "large", disabled: true, dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "danger", size: "large", dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "danger", size: "large", disabled: true, dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "warning", size: "small", dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "warning", size: "small", disabled: true, dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "danger", size: "small", dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "danger", size: "small", disabled: true, dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "labeldanger", size: "large", dark: true }, { children: "Button" }), void 0), _jsx(Button, __assign({ variant: "labeldanger", size: "large", disabled: true, dark: true }, { children: "Button" }), void 0), _jsxs(TooltipWrapper, __assign({ className: "inline-block" }, { children: [_jsx(Button, __assign({ onClick: function () { return setPopconfirmTwo(true); }, variant: "labeldanger", size: "small", dark: true }, { children: "Button" }), void 0), _jsx(Popconfirm, __assign({ show: popconfirmTwo, onAccept: function () { return alert('accept this'); }, onRefuse: function () { return alert('refuse this'); }, onClose: function () { return setPopconfirmTwo(false); } }, { children: "Lorem ipsum, dolor sit amet consectetur adipisicing elit. Tenetur nemo at in obcaecati sunt ducimus eveniet, illum fuga voluptatibus enim, hic commodi id possimus placeat maxime, animi totam molestias accusamus?" }), void 0)] }), void 0), _jsx(Button, __assign({ variant: "labeldanger", size: "small", disabled: true, dark: true }, { children: "Button" }), void 0)] }), void 0)] }), void 0), _jsxs(Row, __assign({ className: "bg-dark-gray" }, { children: [_jsxs(Column, __assign({ cols: 4 }, { children: [_jsx(IconButton, { variant: "primary", size: "large", isLink: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "primary", size: "large", isLink: true, disabled: true, dark: true, icon: "Twitter" }, void 0), _jsx(IconButton, { variant: "secondary", size: "large", isLink: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "secondary", size: "large", isLink: true, disabled: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "tertiary", size: "large", isLink: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "tertiary", size: "large", isLink: true, disabled: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "label", size: "large", isLink: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "label", size: "large", isLink: true, disabled: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "warning", size: "large", isLink: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "warning", size: "large", isLink: true, disabled: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "danger", size: "large", isLink: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "danger", size: "large", isLink: true, disabled: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "labeldanger", size: "large", isLink: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "labeldanger", size: "large", isLink: true, disabled: true, dark: true, icon: "Twitter" }, void 0)] }), void 0), _jsx(Column, __assign({ cols: 4 }, { children: _jsxs("div", __assign({ id: "top" }, { children: [_jsx(IconButton, { variant: "primary", size: "medium", isLink: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "primary", size: "medium", isLink: true, disabled: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "secondary", size: "medium", isLink: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "secondary", size: "medium", isLink: true, disabled: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "tertiary", size: "medium", isLink: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "tertiary", size: "medium", isLink: true, disabled: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "label", size: "medium", isLink: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "label", size: "medium", isLink: true, disabled: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "warning", size: "medium", isLink: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "warning", size: "medium", isLink: true, disabled: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "danger", size: "medium", isLink: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "danger", size: "medium", isLink: true, disabled: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "labeldanger", size: "medium", isLink: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "labeldanger", size: "medium", isLink: true, icon: "Twitter", dark: true }, void 0), _jsx(IconButton, { variant: "labeldanger", size: "medium", isLink: true, dark: true, disabled: true, icon: "Twitter" }, void 0)] }), void 0) }), void 0), _jsxs(Column, __assign({ cols: 4 }, { children: [_jsxs(TooltipWrapper, __assign({ className: "inline-block" }, { children: [_jsx(IconButton, { onClick: function (event) {
                                                            event.preventDefault();
                                                            setPopconfirmShowing(true);
                                                        }, variant: "icon", size: "small", isLink: true, icon: "Twitter", dark: true }, void 0), _jsx(Popconfirm, __assign({ show: popconfirmShowing, className: "left-5", onClose: function () { return setPopconfirmShowing(false); }, onAccept: function () { return alert('accepting'); }, onRefuse: function () { return alert('refusing'); }, acceptText: "I accept", refuseText: "I refuse" }, { children: "Lorem ipsum dolor sit amet consectetur, adipisicing elit. Esse, itaque veritatis deleniti, ipsam quas maiores nisi quod dolor delectus fuga culpa molestias earum aspernatur amet aliquam dignissimos! Reprehenderit, alias iste." }), void 0)] }), void 0), _jsx("div", { children: _jsx(IconButton, { variant: "icon", size: "small", isLink: true, disabled: true, icon: "Twitter", dark: true }, void 0) }, void 0)] }), void 0)] }), void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ sm: 4, md: 4, lg: 4 }, { children: _jsxs(Form, __assign({ onSubmit: function (event) { return submitHandler(event); }, title: "Lorem ipsum" }, { children: [_jsx(Checkbox, __assign({ value: "checkbox1", checked: checkboxOne, required: true, onChange: function () { return setCheckboxOne(!checkboxOne); } }, { children: "Checkboxes 1" }), void 0), _jsx(Checkbox, __assign({ value: "checkbox2", indeterminate: true, checked: checkboxTwo, onChange: function () { return setCheckboxTwo(!checkboxTwo); } }, { children: "A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text" }), void 0), _jsx(Checkbox, __assign({ value: "checkbox3", disabled: true, onChange: function () {
                                                        return;
                                                    } }, { children: "Disabled" }), void 0), _jsxs(RadioGroup, __assign({ invalid: radioInvalid, label: "Radio Buttons", groupName: "r3-buttons-set", value: selectedRadio, onChange: clearRadioError }, { children: [_jsx(RadioButton, __assign({ value: "radio1" }, { children: "Radio 1" }), void 0), _jsxs(RadioButton, __assign({ value: "radio2" }, { children: ["A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text", ' '] }), void 0), _jsx(RadioButton, __assign({ value: "radio3", disabled: true }, { children: "Radio Disabled" }), void 0), _jsx(RadioButton, __assign({ value: "radio4" }, { children: "Radio 4" }), void 0)] }), void 0), _jsxs(FormGroup, __assign({ legend: "Text form group" }, { children: [_jsx(TextInput, { invalid: textValue.length < 3, label: "text input", helpText: "Enter 3 or more characters", errorMessage: "Text is too short", value: textValue, onChange: function (event) { return setTextValue(event.target.value); } }, void 0), _jsx(TextInput, { label: "text input disabled", value: "", onChange: function () {
                                                                return;
                                                            }, disabled: true }, void 0)] }), void 0), _jsxs(FormGroup, __assign({ legend: "Numbers form group" }, { children: [_jsx(NumberInput, { invalid: parseInt(numberValue) < 5, errorMessage: "error", helpText: "help", value: numberValue, onChange: function (event) { return setNumberValue(event.target.value); } }, void 0), _jsx(NumberInput, { value: "", onChange: function () {
                                                                return;
                                                            }, disabled: true }, void 0)] }), void 0), _jsx(EmailInput, { label: "email input", value: emailValue, required: true, errorMessage: "This field is required", helpText: "Enter your email", onChange: function (event) { return setEmailValue(event.target.value); } }, void 0), _jsx(EmailInput, { label: "email disabled input", value: "", onChange: function () {
                                                        return;
                                                    }, disabled: true }, void 0), _jsxs(TooltipWrapper, __assign({ onMouseOver: function () { return setPasswordTooltip(true); }, onMouseOut: function () { return setPasswordTooltip(false); } }, { children: [_jsx(PasswordInput, { label: "password input", value: passwordValue, invalid: passwordValue.length < 4, errorMessage: "Enter a longer password", onChange: function (event) { return setPasswordValue(event.target.value); } }, void 0), _jsx(Tooltip, __assign({ show: passwordTooltip }, { children: "Lorem ipsum dolor sit amet consequat" }), void 0)] }), void 0), _jsx(PasswordInput, { label: "password input disabled", value: "", onChange: function () {
                                                        return;
                                                    }, disabled: true }, void 0), _jsx(DateInput, { label: "date input", required: true, errorMessage: "ERROR", value: dateValue, minDate: new Date(), maxDate: new Date(2020, 11, 1), onChange: function (event) { return setDateValue(event[0] || null); } }, void 0), _jsx(DateInput, { label: "date input disabled", value: null, onChange: function () {
                                                        return;
                                                    }, disabled: true }, void 0), _jsx(TimeInput, { label: "time input", value: timeValue, onChange: function (event) {
                                                        setTimeValue(event[0] || null);
                                                    } }, void 0), _jsx(TimeInput, { label: "time input", value: null, onChange: function () {
                                                        return;
                                                    }, disabled: true }, void 0), _jsx(DateTimeInput, { label: "date time input", value: dateTimeValue, minDate: new Date(), maxDate: new Date(2020, 11, 1), onChange: function (event) { return setDateTimeValue(event[0] || ''); } }, void 0), _jsx(DateTimeInput, { label: "date time input disabled", value: null, onChange: function () {
                                                        return;
                                                    }, disabled: true }, void 0), _jsx(FileUpload, { label: "file input", required: true, filename: fileName, fileProgress: fileProgress, onChange: function (event) { return uploadFile(event); }, onDelete: function () { return setFileName(''); } }, void 0), _jsx(FileUpload, { label: "file input", filename: '', onChange: function (event) { return setFileName(event.target.value); }, onDelete: function () { return setFileName(''); }, disabled: true }, void 0), _jsx(PhoneInput, { label: "phone input", value: phoneValue, onChange: function (event) { return setPhoneValue(event.target.value); } }, void 0), _jsx(PhoneInput, { label: "phone input", disabled: true, value: "", onChange: function (event) { return setPhoneValue(event.target.value); } }, void 0), _jsx(Textarea, { label: "textarea", value: textareaValue, onChange: function (event) { return setTextareaValue(event.target.value); } }, void 0), _jsx(Textarea, { label: "textarea", disabled: true, value: "", onChange: function (event) { return setTextareaValue(event.target.value); } }, void 0), _jsxs(Select, __assign({ invalid: selectValue === '', value: selectValue, onChange: function (event) { return setSelectValue(event.target.value); }, label: "choose one" }, { children: [_jsx(Option, { value: "", disabled: true }, void 0), _jsx(Option, __assign({ value: "one" }, { children: "One" }), void 0), _jsx(Option, __assign({ value: "two" }, { children: "Two" }), void 0), _jsx(Option, __assign({ value: "three" }, { children: "Three" }), void 0)] }), void 0), _jsxs(Select, __assign({ value: "", onChange: function (event) { return setSelectValue(event.target.value); }, label: "choose one disabled", disabled: true }, { children: [_jsx(Option, __assign({ value: "one" }, { children: "One" }), void 0), _jsx(Option, __assign({ value: "two" }, { children: "Two" }), void 0), _jsx(Option, __assign({ value: "three" }, { children: "Three" }), void 0)] }), void 0), _jsx(DownloadFile, { filePath: "/somefile.png", displayName: "somefilename", fileSize: "43 mb" }, void 0), _jsx("br", {}, void 0), _jsxs(Dropdown, __assign({ closeOnSelectOption: true, trigger: _jsx(IconCustom, { icon: "ChevronDown", className: "h-5" }, void 0) }, { children: [_jsx(Option, __assign({ active: true, value: "one", icon: "Magnify" }, { children: "One" }), void 0), _jsx(Option, __assign({ value: "two", icon: "Magnify" }, { children: "Two" }), void 0), _jsx(Option, __assign({ value: "three", icon: "Magnify" }, { children: "Three" }), void 0), _jsx(Option, __assign({ value: "four", icon: "Magnify" }, { children: "Four" }), void 0), _jsx(Option, __assign({ value: "five", icon: "Magnify" }, { children: "Five" }), void 0), _jsx(Option, __assign({ value: "six", icon: "Magnify" }, { children: "Six" }), void 0), _jsx(Option, __assign({ value: "seven", icon: "Magnify" }, { children: "Seven" }), void 0)] }), void 0), _jsx("br", {}, void 0), _jsxs(Dropdown, __assign({ closeOnSelectOption: true, trigger: _jsx("span", __assign({ className: "text-sm uppercase" }, { children: "Dropdown" }), void 0) }, { children: [_jsx(Option, __assign({ value: "one" }, { children: "One" }), void 0), _jsx(Option, __assign({ value: "two" }, { children: "Two" }), void 0), _jsx(Option, __assign({ value: "three" }, { children: "Three" }), void 0), _jsx(Option, __assign({ value: "four" }, { children: "Four" }), void 0), _jsx(Option, __assign({ value: "five" }, { children: "Five" }), void 0), _jsx(Option, __assign({ value: "six" }, { children: "Six" }), void 0), _jsx(Option, __assign({ value: "seven" }, { children: "Seven" }), void 0)] }), void 0), _jsx("br", {}, void 0), _jsxs(MultiSelect, __assign({ required: true, helpText: "choose at least one option", errorMessage: "you haven't selected an option", label: "multiselect", value: multiselectValue, onChange: setMultiselectValue }, { children: [_jsx(Option, __assign({ value: "one" }, { children: "One" }), void 0), _jsx(Option, __assign({ value: "one" }, { children: "One" }), void 0), _jsx(Option, __assign({ value: "two" }, { children: "Two" }), void 0), _jsx(Option, __assign({ value: "two" }, { children: "Two" }), void 0), _jsx(Option, __assign({ value: "three" }, { children: "Three" }), void 0), _jsx(Option, __assign({ value: "four" }, { children: "Four" }), void 0), _jsx(Option, __assign({ value: "five" }, { children: "Five" }), void 0), _jsx(Option, __assign({ value: "six" }, { children: "Six" }), void 0), _jsx(Option, __assign({ value: "seven" }, { children: "Seven" }), void 0), _jsx(Option, __assign({ value: "eight" }, { children: "Eight" }), void 0)] }), void 0), _jsx(Button, __assign({ variant: "primary", size: "large", onClick: function (event) {
                                                        event.preventDefault();
                                                        setMultiselectValue([]);
                                                    } }, { children: "Clear" }), void 0), _jsxs(MultiSelect, __assign({ disabled: true, required: true, helpText: "choose at least one option", errorMessage: "you haven't selected an option", label: "multiselect", value: [], onChange: setMultiselectValue }, { children: [_jsx(Option, __assign({ value: "one" }, { children: "One" }), void 0), _jsx(Option, __assign({ value: "two" }, { children: "Two" }), void 0), _jsx(Option, __assign({ value: "three" }, { children: "Three" }), void 0), _jsx(Option, __assign({ value: "four" }, { children: "Four" }), void 0), _jsx(Option, __assign({ value: "five" }, { children: "Five" }), void 0), _jsx(Option, __assign({ value: "six" }, { children: "Six" }), void 0), _jsx(Option, __assign({ value: "seven" }, { children: "Seven" }), void 0)] }), void 0), _jsx(Slider, { value: sliderValue, onChange: function (event) { return setSliderValue(event.target.value); } }, void 0), _jsx("br", {}, void 0), _jsx(Slider, { disabled: true, value: "50", onChange: function () {
                                                        return;
                                                    } }, void 0), _jsx(Button, __assign({ variant: "primary", size: "large", type: "submit" }, { children: "Submit" }), void 0)] }), void 0) }), void 0), _jsx(Column, __assign({ sm: 4, md: 4, lg: 4 }, { children: _jsxs(Form, __assign({ dark: true, onSubmit: function (event) { return submitHandler(event); }, title: "Lorem ipsum" }, { children: [_jsx(Checkbox, __assign({ dark: true, value: "checkbox1", checked: checkboxOne, required: true, onChange: function () { return setCheckboxOne(!checkboxOne); } }, { children: "Checkboxes 1" }), void 0), _jsx(Checkbox, __assign({ dark: true, value: "checkbox2", indeterminate: true, checked: checkboxTwo, onChange: function () { return setCheckboxTwo(!checkboxTwo); } }, { children: "A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text" }), void 0), _jsx(Checkbox, __assign({ dark: true, value: "checkbox3", disabled: true, onChange: function () {
                                                        return;
                                                    } }, { children: "Disabled" }), void 0), _jsxs(RadioGroup, __assign({ dark: true, invalid: radioInvalid, label: "Radio Buttons", groupName: "r3-buttons-set", value: selectedRadio, onChange: clearRadioError }, { children: [_jsx(RadioButton, __assign({ value: "radio1" }, { children: "Radio 1" }), void 0), _jsxs(RadioButton, __assign({ value: "radio2" }, { children: ["A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text A very long text", ' '] }), void 0), _jsx(RadioButton, __assign({ value: "radio3", disabled: true }, { children: "Radio Disabled" }), void 0), _jsx(RadioButton, __assign({ value: "radio4" }, { children: "Radio 4" }), void 0)] }), void 0), _jsxs(FormGroup, __assign({ legend: "Text form group" }, { children: [_jsx(TextInput, { dark: true, invalid: textValue.length < 3, label: "text input", helpText: "Enter 3 or more characters", errorMessage: "Text is too short", value: textValue, onChange: function (event) { return setTextValue(event.target.value); } }, void 0), _jsx(TextInput, { dark: true, label: "text input disabled", value: "", onChange: function () {
                                                                return;
                                                            }, disabled: true }, void 0)] }), void 0), _jsxs(FormGroup, __assign({ legend: "Numbers form group" }, { children: [_jsx(NumberInput, { dark: true, invalid: parseInt(numberValue) < 5, errorMessage: "error", helpText: "help", value: numberValue, onChange: function (event) { return setNumberValue(event.target.value); } }, void 0), _jsx(NumberInput, { dark: true, value: "", onChange: function () {
                                                                return;
                                                            }, disabled: true }, void 0)] }), void 0), _jsx(EmailInput, { dark: true, label: "email input", value: emailValue, required: true, errorMessage: "This field is required", helpText: "Enter your email", onChange: function (event) { return setEmailValue(event.target.value); } }, void 0), _jsx(EmailInput, { dark: true, label: "email disabled input", value: "", onChange: function () {
                                                        return;
                                                    }, disabled: true }, void 0), _jsx(PasswordInput, { dark: true, label: "password input", value: passwordValue, invalid: passwordValue.length < 4, errorMessage: "Enter a longer password", helpText: "Enter a strong password", onChange: function (event) { return setPasswordValue(event.target.value); } }, void 0), _jsx(PasswordInput, { dark: true, label: "password input disabled", value: "", onChange: function () {
                                                        return;
                                                    }, disabled: true }, void 0), _jsx(DateInput, { dark: true, label: "date input", value: dateValue, minDate: new Date(), maxDate: new Date(2020, 8, 1), onChange: function (event) { return setDateValue(event[0] || null); } }, void 0), _jsx(DateInput, { dark: true, label: "date input disabled", value: null, onChange: function () {
                                                        return;
                                                    }, disabled: true }, void 0), _jsx(TimeInput, { dark: true, label: "time input", value: timeValue, onChange: function (event) {
                                                        setTimeValue(event[0] || null);
                                                    } }, void 0), _jsx(TimeInput, { dark: true, label: "time input", value: null, onChange: function () {
                                                        return;
                                                    }, disabled: true }, void 0), _jsx(DateTimeInput, { dark: true, label: "date time input", value: dateTimeValue, minDate: new Date(), maxDate: new Date(2020, 8, 1), onChange: function (event) { return setDateTimeValue(event[0] || ''); } }, void 0), _jsx(DateTimeInput, { dark: true, label: "date time input disabled", value: null, onChange: function () {
                                                        return;
                                                    }, disabled: true }, void 0), _jsx(FileUpload, { dark: true, label: "file input", required: true, filename: fileName, fileProgress: fileProgress, onChange: function (event) { return uploadFile(event); }, onDelete: function () { return setFileName(''); } }, void 0), _jsx(FileUpload, { dark: true, label: "file input", filename: '', onChange: function (event) { return setFileName(event.target.value); }, onDelete: function () { return setFileName(''); }, disabled: true }, void 0), _jsx(PhoneInput, { dark: true, label: "phone input", value: phoneValue, onChange: function (event) { return setPhoneValue(event.target.value); } }, void 0), _jsx(PhoneInput, { dark: true, label: "phone input", disabled: true, value: "", onChange: function (event) { return setPhoneValue(event.target.value); } }, void 0), _jsx(Textarea, { dark: true, label: "textarea", helpText: "lorem ipsum dolor sit amet", errorMessage: "lorem ipsum dolor sit amet", value: textareaValue, onChange: function (event) { return setTextareaValue(event.target.value); } }, void 0), _jsx(Textarea, { dark: true, label: "textarea", disabled: true, value: "", onChange: function (event) { return setTextareaValue(event.target.value); } }, void 0), _jsxs(Select, __assign({ dark: true, invalid: selectValue === '', value: selectValue, onChange: function (event) { return setSelectValue(event.target.value); }, label: "choose one" }, { children: [_jsx(Option, { value: "", disabled: true }, void 0), _jsx(Option, __assign({ value: "one" }, { children: "One" }), void 0), _jsx(Option, __assign({ value: "two" }, { children: "Two" }), void 0), _jsx(Option, __assign({ value: "three" }, { children: "Three" }), void 0)] }), void 0), _jsxs(Select, __assign({ dark: true, value: "", onChange: function (event) { return setSelectValue(event.target.value); }, label: "choose one disabled", disabled: true }, { children: [_jsx(Option, __assign({ value: "one" }, { children: "One" }), void 0), _jsx(Option, __assign({ value: "two" }, { children: "Two" }), void 0), _jsx(Option, __assign({ value: "three" }, { children: "Three" }), void 0)] }), void 0), _jsx(DownloadFile, { filePath: "/somefile.png", displayName: "somefilename", fileSize: "43 mb" }, void 0), _jsx("br", {}, void 0), _jsxs(Dropdown, __assign({ closeOnSelectOption: true, trigger: _jsx(IconCustom, { icon: "ChevronDown", className: "h-5" }, void 0) }, { children: [_jsx(Option, __assign({ value: "one", icon: "Magnify" }, { children: "One" }), void 0), _jsx(Option, __assign({ value: "two", icon: "Magnify" }, { children: "Two" }), void 0), _jsx(Option, __assign({ value: "three", icon: "Magnify" }, { children: "Three" }), void 0), _jsx(Option, __assign({ value: "four", icon: "Magnify" }, { children: "Four" }), void 0), _jsx(Option, __assign({ value: "five", icon: "Magnify" }, { children: "Five" }), void 0), _jsx(Option, __assign({ value: "six", icon: "Magnify" }, { children: "Six" }), void 0), _jsx(Option, __assign({ value: "seven", icon: "Magnify" }, { children: "Seven" }), void 0)] }), void 0), _jsx("br", {}, void 0), _jsxs(Dropdown, __assign({ closeOnSelectOption: true, trigger: _jsx("span", __assign({ className: "text-sm uppercase" }, { children: "Dropdown" }), void 0) }, { children: [_jsx(Option, __assign({ value: "one" }, { children: "One" }), void 0), _jsx(Option, __assign({ value: "two" }, { children: "Two" }), void 0), _jsx(Option, __assign({ value: "three" }, { children: "Three" }), void 0), _jsx(Option, __assign({ value: "four" }, { children: "Four" }), void 0), _jsx(Option, __assign({ value: "five" }, { children: "Five" }), void 0), _jsx(Option, __assign({ value: "six" }, { children: "Six" }), void 0), _jsx(Option, __assign({ value: "seven" }, { children: "Seven" }), void 0)] }), void 0), _jsx("br", {}, void 0), _jsxs(MultiSelect, __assign({ dark: true, required: true, helpText: "choose at least one option", errorMessage: "you haven't selected an option", label: "multiselect", value: multiselectValue, onChange: setMultiselectValue }, { children: [_jsx(Option, __assign({ value: "one" }, { children: "One" }), void 0), _jsx(Option, __assign({ value: "one" }, { children: "One" }), void 0), _jsx(Option, __assign({ value: "two" }, { children: "Two" }), void 0), _jsx(Option, __assign({ value: "three" }, { children: "Three" }), void 0), _jsx(Option, __assign({ value: "five" }, { children: "Five" }), void 0), _jsx(Option, __assign({ value: "six" }, { children: "Six" }), void 0), _jsx(Option, __assign({ value: "seven" }, { children: "Seven" }), void 0)] }), void 0), _jsx(Slider, { dark: true, value: sliderValue, onChange: function (event) { return setSliderValue(event.target.value); } }, void 0), _jsx("br", {}, void 0), _jsx(Slider, { dark: true, disabled: true, value: "50", onChange: function () {
                                                        return;
                                                    } }, void 0), _jsx(Button, __assign({ variant: "primary", size: "large", type: "submit" }, { children: "Submit" }), void 0)] }), void 0) }), void 0), _jsxs(Column, __assign({ sm: 4, md: 4, lg: 4 }, { children: [_jsx(Toggle, { variant: "gray", checked: toggleGraySmall, textContent: "Text Text Text Text Text Text Text Text Text Text Text Text Text Text Text Text Text Text Text Text Text Text Text Text ", onChange: function () { return setToggleGraySmall(!toggleGraySmall); } }, void 0), _jsx(Toggle, { variant: "gray", disabled: true, checked: toggleGraySmallDe, onChange: function () { return setToggleGraySmallDe(!toggleGraySmallDe); } }, void 0), _jsx(Toggle, { variant: "redgreen", checked: toggleRedSmall, onChange: function () { return setToggleRedSmall(!toggleRedSmall); } }, void 0), _jsx(Toggle, { variant: "redgreen", disabled: true, checked: toggleRedSmallDe, onChange: function () { return setToggleRedSmallDe(!toggleRedSmallDe); } }, void 0), _jsx(Toggle, { variant: "gray", labelOn: "on", labelOff: "off", textContent: "Text Text Text Text Text", checked: toggleGrayBig, onChange: function () { return setToggleGrayBig(!toggleGrayBig); } }, void 0), _jsx(Toggle, { variant: "gray", labelOn: "on", labelOff: "off", disabled: true, checked: toggleGrayBigDe, onChange: function () { return setToggleGrayBigDe(!toggleGrayBigDe); } }, void 0), _jsx(Toggle, { variant: "redgreen", labelOn: "yes", labelOff: "no", checked: toggleRedBig, onChange: function () { return setToggleRedBig(!toggleRedBig); } }, void 0), _jsx(Toggle, { variant: "redgreen", labelOn: "yes", labelOff: "no", disabled: true, checked: toggleRedBigDe, onChange: function () { return setToggleRedBigDe(!toggleRedBigDe); } }, void 0)] }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 4 }, { children: _jsxs(Card, __assign({ title: "Lorem ipsum dolor sit amet" }, { children: [_jsx("span", { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }, void 0), _jsx("span", __assign({ className: "block pt-4 text-blue uppercase font-bold " }, { children: "see more" }), void 0)] }), void 0) }), void 0), _jsx(Column, __assign({ cols: 4 }, { children: _jsxs(Card, __assign({ title: "Lorem ipsum dolor sit amet", image: cardImage, alt: "man sitting in front of laptop" }, { children: [_jsx("span", { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }, void 0), _jsx("span", __assign({ className: "block pt-4 text-blue uppercase font-bold " }, { children: "see more" }), void 0)] }), void 0) }), void 0), _jsx(Column, __assign({ cols: 4 }, { children: _jsxs(Card, __assign({ title: "Lorem ipsum dolor sit amet", icon: "StarOutline" }, { children: [_jsx("span", { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }, void 0), _jsx("span", __assign({ className: "block pt-4 text-blue uppercase font-bold " }, { children: "see more" }), void 0)] }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 4 }, { children: _jsxs(Card, __assign({ dark: true, title: "Lorem ipsum dolor sit amet" }, { children: [_jsx("span", { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }, void 0), _jsx("span", __assign({ className: "block pt-4 text-blue uppercase font-bold " }, { children: "see more" }), void 0)] }), void 0) }), void 0), _jsx(Column, __assign({ cols: 4 }, { children: _jsxs(Card, __assign({ dark: true, title: "Lorem ipsum dolor sit amet", image: cardImage, alt: "man sitting in front of laptop" }, { children: [_jsx("span", { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }, void 0), _jsx("span", __assign({ className: "block pt-4 text-blue uppercase font-bold " }, { children: "see more" }), void 0)] }), void 0) }), void 0), _jsx(Column, __assign({ cols: 4 }, { children: _jsxs(Card, __assign({ dark: true, title: "Lorem ipsum dolor sit amet", icon: "StarOutline" }, { children: [_jsx("span", { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }, void 0), _jsx("span", __assign({ className: "block pt-4 text-blue uppercase font-bold " }, { children: "see more" }), void 0)] }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsxs(Column, __assign({ cols: 4 }, { children: [_jsx(Alert, __assign({ variant: "danger" }, { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonumm euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }), void 0), _jsx("br", {}, void 0), _jsx(Alert, __assign({ variant: "warning" }, { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonumm euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }), void 0), _jsx("br", {}, void 0), _jsx(Alert, __assign({ variant: "success" }, { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonumm euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }), void 0)] }), void 0), _jsxs(Column, __assign({ cols: 4 }, { children: [_jsx(Alert, __assign({ variant: "danger", title: "Lorem ipsum" }, { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonumm euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }), void 0), _jsx("br", {}, void 0), _jsx(Alert, __assign({ variant: "warning", title: "Lorem ipsum" }, { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonumm euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }), void 0), _jsx("br", {}, void 0), _jsx(Alert, __assign({ variant: "success", title: "Lorem ipsum" }, { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonumm euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }), void 0)] }), void 0), _jsxs(Column, __assign({ cols: 4 }, { children: [_jsx(Alert, __assign({ variant: "danger", withIcon: true }, { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonumm euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }), void 0), _jsx("br", {}, void 0), _jsx(Alert, __assign({ variant: "warning", withIcon: true }, { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonumm euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }), void 0), _jsx("br", {}, void 0), _jsx(Alert, __assign({ variant: "success", withIcon: true }, { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonumm euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }), void 0)] }), void 0)] }, void 0), _jsxs(Row, { children: [_jsxs(Column, __assign({ cols: 4 }, { children: [_jsx(Button, __assign({ size: "small", variant: "secondary", onClick: function (event) { return openModal(event, setModalOneShow); } }, { children: "Modal One" }), void 0), _jsx(Modal, __assign({ size: "small", title: "Lorem ipsum", open: modalOneShow, onClose: function () { return setModalOneShow(false); }, closeOnOutsideClick: true }, { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }), void 0), _jsx(Button, __assign({ size: "small", variant: "secondary", onClick: function (event) { return openModal(event, setModalTwoShow); } }, { children: "Modal Two" }), void 0), _jsxs(Modal, __assign({ size: "small", title: "Lorem ipsum", variant: "danger", open: modalTwoShow, onClose: function () { return setModalTwoShow(false); }, closeOnOutsideClick: true, withBackdrop: true }, { children: [_jsx(DateInput, { label: "date input", required: true, errorMessage: "ERROR", value: dateValue, minDate: new Date(), maxDate: new Date(2022, 11, 1), onChange: function (event) { return setDateValue(event[0] || null); } }, void 0), _jsx(DateTimeInput, { label: "date time input", value: dateTimeValue, minDate: new Date(), maxDate: new Date(2020, 11, 1), onChange: function (event) { return setDateTimeValue(event[0] || ''); } }, void 0)] }), void 0), _jsx(Button, __assign({ size: "small", variant: "secondary", onClick: function (event) { return openModal(event, setModalThreeShow); } }, { children: "Modal Three" }), void 0), _jsxs(Modal, __assign({ size: "small", title: "Lorem ipsum", variant: "warning", open: modalThreeShow, onClose: function () { return setModalThreeShow(false); }, closeOnOutsideClick: true }, { children: ["Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.", _jsxs("div", __assign({ className: "flex mt-4" }, { children: [_jsx(Button, __assign({ size: "large", variant: "label", onClick: function () { return setModalThreeShow(false); } }, { children: "Cancel" }), void 0), _jsx(Button, __assign({ size: "large", variant: "tertiary" }, { children: "Accept" }), void 0)] }), void 0)] }), void 0), _jsx(Button, __assign({ size: "small", variant: "secondary", onClick: function (event) { return openModal(event, setModalFourShow); } }, { children: "Modal Four" }), void 0), _jsx(Modal, __assign({ size: "small", title: "Lorem ipsum", variant: "success", open: modalFourShow, onClose: function () { return setModalFourShow(false); }, closeOnOutsideClick: true }, { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }), void 0)] }), void 0), _jsxs(Column, __assign({ cols: 4 }, { children: [_jsx(Button, __assign({ size: "small", variant: "secondary", onClick: function (event) { return openModal(event, setModalFiveShow); } }, { children: "Modal Five" }), void 0), _jsxs(Modal, __assign({ size: "large", title: "Lorem ipsum", open: modalFiveShow, onClose: function () { return setModalFiveShow(false); }, closeOnOutsideClick: true }, { children: ["Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.", _jsxs("div", __assign({ className: "flex justify-around w-1/4 mx-auto mt-4" }, { children: [_jsx(Button, __assign({ size: "large", variant: "label" }, { children: "Cancel" }), void 0), _jsx(Button, __assign({ size: "large", variant: "tertiary" }, { children: "Accept" }), void 0)] }), void 0)] }), void 0), _jsx(Button, __assign({ size: "small", variant: "secondary", onClick: function (event) { return openModal(event, setModalSixShow); } }, { children: "Modal Six" }), void 0), _jsxs(Modal, __assign({ size: "large", title: "Lorem ipsum", variant: "danger", open: modalSixShow, onClose: function () { return setModalSixShow(false); }, closeOnOutsideClick: true }, { children: ["Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.", _jsxs("div", __assign({ className: "flex justify-around w-1/4 mx-auto mt-4" }, { children: [_jsx(Button, __assign({ size: "large", variant: "label" }, { children: "Cancel" }), void 0), _jsx(Button, __assign({ size: "large", variant: "tertiary" }, { children: "Accept" }), void 0)] }), void 0)] }), void 0), _jsx(Button, __assign({ size: "small", variant: "secondary", onClick: function (event) { return openModal(event, setModalSevenShow); } }, { children: "Modal Seven" }), void 0), _jsxs(Modal, __assign({ withBackdrop: true, size: "large", title: "Lorem ipsum", variant: "warning", open: modalSevenShow, onClose: function () { return setModalSevenShow(false); }, closeOnOutsideClick: true }, { children: ["Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.", _jsxs("div", __assign({ className: "flex justify-around w-1/4 mx-auto mt-4" }, { children: [_jsx(Button, __assign({ size: "large", variant: "label" }, { children: "Cancel" }), void 0), _jsx(Button, __assign({ size: "large", variant: "tertiary" }, { children: "Accept" }), void 0)] }), void 0)] }), void 0), _jsx(Button, __assign({ size: "small", variant: "secondary", onClick: function (event) { return openModal(event, setModalEightShow); } }, { children: "Modal Eight" }), void 0), _jsxs(Modal, __assign({ size: "large", withBackdrop: true, title: "Lorem ipsum", variant: "success", open: modalEightShow, onClose: function () { return setModalEightShow(false); }, closeOnOutsideClick: true }, { children: ["Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laeet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.", _jsxs("div", __assign({ className: "flex justify-around w-1/4 mx-auto mt-4" }, { children: [_jsx(Button, __assign({ size: "large", variant: "label" }, { children: "Cancel" }), void 0), _jsx(Button, __assign({ size: "large", variant: "tertiary" }, { children: "Accept" }), void 0)] }), void 0)] }), void 0)] }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx("br", {}, void 0), _jsxs(Column, __assign({ cols: 12 }, { children: [_jsx(CodeSnippet, __assign({ withSandbox: true, link: "/#" }, { children: "@import \u201C@carbon/themes/scss/themes\u201D;" }), void 0), _jsx("br", {}, void 0), _jsx(CodeSnippet, { children: "@import \u201C@carbon/themes/scss/themes\u201D;" }, void 0), _jsx("br", {}, void 0)] }), void 0), _jsxs(Column, __assign({ cols: 6 }, { children: [_jsx(Accordion, __assign({ title: "Lorem ipsum dolor sit amet" }, { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }), void 0), _jsx("br", {}, void 0)] }), void 0), _jsxs(Column, __assign({ cols: 6 }, { children: [_jsx(Accordion, __assign({ title: "Lorem ipsum dolor sit amet", dark: true }, { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat." }), void 0), _jsx("br", {}, void 0)] }), void 0)] }, void 0), _jsx(Row, { children: _jsxs(Column, __assign({ cols: 12 }, { children: [_jsx(Typography, {}, void 0), _jsx("br", {}, void 0)] }), void 0) }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 12 }, { children: _jsxs(Tabs, __assign({ variant: "light", selected: 2 }, { children: [_jsx(Tab, __assign({ name: "design" }, { children: "content for design" }), void 0), _jsx(Tab, __assign({ name: "code" }, { children: "content for code" }), void 0), _jsxs(Tab, __assign({ name: "system component" }, { children: [_jsx(TextInput, { value: textValue, onChange: function (event) { return setTextValue(event.target.value); }, label: "text in tab" }, void 0), _jsx(IconButton, { variant: "primary", size: "large", isLink: true, icon: "Twitter" }, void 0)] }), void 0)] }), void 0) }), void 0), _jsx(Column, __assign({ cols: 12 }, { children: _jsxs(Tabs, __assign({ variant: "light", selected: 1 }, { children: [_jsx(Tab, { name: "lorem" }, void 0), _jsx(Tab, { name: "lorem" }, void 0), _jsx(Tab, { name: "lorem ipsum" }, void 0), _jsx(Tab, { name: "lorem ipsum" }, void 0), _jsx(Tab, { name: "lorem" }, void 0), _jsx(Tab, { name: "lorem" }, void 0), _jsx(Tab, { name: "lorem ipsum" }, void 0), _jsx(Tab, { name: "lorem ipsum" }, void 0), _jsx(Tab, { name: "lorem" }, void 0), _jsx(Tab, { name: "lorem" }, void 0), _jsx(Tab, { name: "lorem ipsum" }, void 0), _jsx(Tab, { name: "lorem ipsum" }, void 0)] }), void 0) }), void 0), _jsx(Column, __assign({ cols: 12 }, { children: _jsxs(Tabs, __assign({ variant: "dark", selected: 1 }, { children: [_jsx(Tab, __assign({ name: "design" }, { children: "content for design" }), void 0), _jsx(Tab, __assign({ name: "code" }, { children: "content for code" }), void 0), _jsx(Tab, __assign({ name: "system component" }, { children: _jsx(IconButton, { variant: "primary", size: "large", isLink: true, icon: "Twitter" }, void 0) }), void 0)] }), void 0) }), void 0), _jsx(Column, __assign({ cols: 12 }, { children: _jsxs(Tabs, __assign({ variant: "dark" }, { children: [_jsx(Tab, { name: "lorem" }, void 0), _jsx(Tab, { name: "lorem" }, void 0), _jsx(Tab, { name: "lorem ipsum" }, void 0), _jsx(Tab, { name: "lorem ipsum" }, void 0), _jsx(Tab, { name: "lorem" }, void 0), _jsx(Tab, { name: "lorem" }, void 0), _jsx(Tab, { name: "lorem ipsum" }, void 0), _jsx(Tab, { name: "lorem ipsum" }, void 0), _jsx(Tab, { name: "lorem" }, void 0), _jsx(Tab, { name: "lorem" }, void 0), _jsx(Tab, { name: "lorem ipsum" }, void 0), _jsx(Tab, { name: "lorem ipsum" }, void 0)] }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsxs(Column, __assign({ cols: 4 }, { children: [_jsx(Badge, __assign({ variant: "blue" }, { children: "Blue" }), void 0), _jsx(Badge, __assign({ variant: "yellow" }, { children: "Yellow" }), void 0), _jsx(Badge, __assign({ variant: "green" }, { children: "Green" }), void 0)] }), void 0), _jsxs(Column, __assign({ cols: 4, smStart: 7, mdStart: 8, lgStart: 9 }, { children: [_jsx(Badge, __assign({ variant: "red" }, { children: "Red" }), void 0), _jsx(Badge, __assign({ variant: "gray" }, { children: "Gray" }), void 0), _jsx(Badge, __assign({ customColour: "black", whiteText: true }, { children: "Custom" }), void 0)] }), void 0)] }, void 0), _jsx("br", {}, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(Button, __assign({ variant: "warning", size: "small", onClick: function () { return setDrawerBottomShow(true); } }, { children: "Drawer Bottom" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(Button, __assign({ variant: "warning", size: "small", onClick: function () { return setDrawerRightShow(true); } }, { children: "Drawer Right" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(Button, __assign({ variant: "warning", size: "small", onClick: function () { return setDrawerTopShow(true); } }, { children: "Drawer Top" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(Button, __assign({ variant: "warning", size: "small", onClick: function () { return setDrawerLeftShow(true); } }, { children: "Drawer Left" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 6 }, { children: _jsx(ProgressIndicator, { progress: 75 }, void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(AnchorLink, __assign({ to: "bottom", offsetEl: pageRefCurrent }, { children: "Small anchor" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(Anchor, __assign({ idToScrollTo: "large-anchor" }, { children: _jsx("h3", { children: "Anchor" }, void 0) }), void 0) }), void 0)] }, void 0), _jsx(Button, __assign({ size: "small", variant: "tertiary", onClick: function () {
                                    return NotificationService.addNotification(infoToast);
                                } }, { children: "Toast" }), void 0), _jsx(Button, __assign({ size: "small", variant: "tertiary", onClick: function () {
                                    return NotificationService.addNotification(errorToast);
                                } }, { children: "Toast" }), void 0), _jsx(Button, __assign({ size: "small", variant: "tertiary", onClick: function () {
                                    return NotificationService.notify('this is a warning', 'warning', 'warning', false);
                                } }, { children: "Toast" }), void 0), _jsx(Button, __assign({ size: "small", variant: "tertiary", onClick: function () {
                                    return NotificationService.addNotification(infoSnackbar);
                                } }, { children: "snackbar" }), void 0), _jsx(Button, __assign({ size: "small", variant: "tertiary", onClick: function () {
                                    return NotificationService.addNotification(warningSnackbar);
                                } }, { children: "snackbar" }), void 0), _jsx(Button, __assign({ size: "small", variant: "tertiary", onClick: function () {
                                    return NotificationService.addNotification(errorSnackbar);
                                } }, { children: "snackbar" }), void 0), _jsx(Button, __assign({ size: "small", variant: "tertiary", onClick: function () {
                                    return NotificationService.addNotification(successSnackbar);
                                } }, { children: "snackbar" }), void 0), _jsxs(Row, { children: [_jsxs(Column, __assign({ cols: 6 }, { children: [_jsx(Pagination, { pages: 81, currentPage: currentPage, toPage: function (event) { return setCurrentPage(event); } }, void 0), _jsx("br", {}, void 0)] }), void 0), _jsx(Column, __assign({ cols: 6 }, { children: _jsx(Pagination, { withInput: true, pages: 5, currentPage: currentPage, toPage: function (event) { return setCurrentPage(event); } }, void 0) }), void 0)] }, void 0), _jsx("br", {}, void 0), _jsx(Row, { children: _jsxs(Column, __assign({ cols: 6 }, { children: [_jsx(EmptyState, __assign({ show: true, icon: "AstronautHello", title: "Lorem ipsum dolor sit amet" }, { children: "Lorem ipsum dolor sit amet" }), void 0), _jsx("br", {}, void 0)] }), void 0) }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, image: cardImage }, { children: "AstronautFishing" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "AstronautFlight" }, { children: "AstronautFlight" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "AstronautHello" }, { children: "AstronautHello" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "AstronautSittingOnPlanet" }, { children: "AstronautSittingOnPlanet" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "AstronautWave" }, { children: "AstronautWave" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "AstronautWithFlag" }, { children: "AstronautWithFlag" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "EssentialsAccept" }, { children: "EssentialsAccept" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "EssentialsAdd" }, { children: "EssentialsAdd" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "EssentialsAirplane" }, { children: "EssentialsAirplane" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "EssentialsBattery" }, { children: "EssentialsBattery" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "EssentialsCalendar" }, { children: "EssentialsCalendar" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "EssentialsClock" }, { children: "EssentialsClock" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "EssentialsCode" }, { children: "EssentialsCode" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "EssentialsCompass" }, { children: "EssentialsCompass" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "EssentialsDecline" }, { children: "EssentialsDecline" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "EssentialsDiamond" }, { children: "EssentialsDiamond" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "EssentialsEarth" }, { children: "EssentialsEarth" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "EssentialsHide" }, { children: "EssentialsHide" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "EssentialsHome" }, { children: "EssentialsHome" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "EssentialsLightbulb" }, { children: "EssentialsLightbulb" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "EssentialsLock" }, { children: "EssentialsLock" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "EssentialsNetwork" }, { children: "EssentialsNetwork" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "EssentialsNotification" }, { children: "EssentialsNotification" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "EssentialsPowerButton" }, { children: "EssentialsPowerButton" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "EssentialsProfile" }, { children: "EssentialsProfile" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "EssentialsRefresh" }, { children: "EssentialsRefresh" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "EssentialsRemove" }, { children: "EssentialsRemove" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "EssentialsSecurity" }, { children: "EssentialsSecurity" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "EssentialsShow" }, { children: "EssentialsShow" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "EssentialsStyleCode" }, { children: "EssentialsStyleCode" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "EssentialsTools" }, { children: "EssentialsTools" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "EssentialsWarning" }, { children: "EssentialsWarning" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "EssentialsWaiting" }, { children: "EssentialsWaiting" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "EssentialsWrite" }, { children: "EssentialsWrite" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "EssentialsWriteMessage" }, { children: "EssentialsWriteMessage" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FileApprove" }, { children: "FileApprove" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FileDelete" }, { children: "FileDelete" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FileEdit" }, { children: "FileEdit" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FileLoading" }, { children: "FileLoading" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FileLock" }, { children: "FileLock" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FileOptions" }, { children: "FileOptions" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FileSearch" }, { children: "FileSearch" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FileUnlock" }, { children: "FileUnlock" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FinanceAnalysis" }, { children: "FinanceAnalysis" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FinanceBankCheque" }, { children: "FinanceBankCheque" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FinanceCashAnalysis" }, { children: "FinanceCashAnalysis" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FinanceCreditCard" }, { children: "FinanceCreditCard" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FinanceGlobalCurrency" }, { children: "FinanceGlobalCurrency" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FinanceGlobalFunding" }, { children: "FinanceGlobalFunding" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FinanceInvestmentBanking" }, { children: "FinanceInvestmentBanking" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FinanceInvoice" }, { children: "FinanceInvoice" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FinanceMoneyAnalysis" }, { children: "FinanceMoneyAnalysis" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FinanceMoneyBag" }, { children: "FinanceMoneyBag" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FinanceMoneyGrowth" }, { children: "FinanceMoneyGrowth" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FinanceMoneyGrowthAnalysis" }, { children: "FinanceMoneyGrowthAnalysis" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FinanceMoneyGrowthGraph" }, { children: "FinanceMoneyGrowthGraph" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FinanceMoneyGrowthTrend" }, { children: "FinanceMoneyGrowthTrend" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FinancePercentageInvestment" }, { children: "FinancePercentageInvestment" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FinancePiggyBank" }, { children: "FinancePiggyBank" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FinanceSafeInvestment" }, { children: "FinanceSafeInvestment" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FinanceSearchingForCash" }, { children: "FinanceSearchingForCash" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FinanceSecurity" }, { children: "FinanceSecurity" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FinanceTimeIsMoney" }, { children: "FinanceTimeIsMoney" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FinanceWallet" }, { children: "FinanceWallet" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FolderApprove" }, { children: "FolderApprove" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FolderDelete" }, { children: "FolderDelete" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FolderEdit" }, { children: "FolderEdit" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FolderLoading" }, { children: "FolderLoading" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FolderLock" }, { children: "FolderLock" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FolderOptions" }, { children: "FolderOptions" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "FolderSearch" }, { children: "FolderSearch" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "FolderUnlock" }, { children: "FolderUnlock" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "Wireless404" }, { children: "Wireless404" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "WirelessAchievement" }, { children: "WirelessAchievement" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "WirelessBrowserSearch" }, { children: "WirelessBrowserSearch" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "WirelessBug" }, { children: "WirelessBug" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "WirelessCloud" }, { children: "WirelessCloud" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "WirelessDownload" }, { children: "WirelessDownload" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "WirelessDownloadFiles" }, { children: "WirelessDownloadFiles" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "WirelessEmail" }, { children: "WirelessEmail" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "WirelessEnergy" }, { children: "WirelessEnergy" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "WirelessGlobal" }, { children: "WirelessGlobal" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "WirelessHistory" }, { children: "WirelessHistory" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "WirelessInternet" }, { children: "WirelessInternet" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "WirelessLoading" }, { children: "WirelessLoading" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "WirelessLocked" }, { children: "WirelessLocked" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "WirelessMark" }, { children: "WirelessMark" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "WirelessPassword" }, { children: "WirelessPassword" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "WirelessPrinter" }, { children: "WirelessPrinter" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "WirelessProtected" }, { children: "WirelessProtected" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "WirelessReceiving" }, { children: "WirelessReceiving" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "WirelessSave" }, { children: "WirelessSave" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "WirelessSearch" }, { children: "WirelessSearch" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "WirelessSearchResults" }, { children: "WirelessSearchResults" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "WirelessSecured" }, { children: "WirelessSecured" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "WirelessSending" }, { children: "WirelessSending" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "WirelessSettings" }, { children: "WirelessSettings" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "WirelessTimedOut" }, { children: "WirelessTimedOut" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "WirelessUnavailable" }, { children: "WirelessUnavailable" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "WirelessUnlocked" }, { children: "WirelessUnlocked" }), void 0) }), void 0)] }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "WirelessView" }, { children: "WirelessView" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "WirelessWaiting" }, { children: "WirelessWaiting" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ icon: "WirelessWireless" }, { children: "WirelessWireless" }), void 0) }), void 0), _jsx(Column, __assign({ cols: 3 }, { children: _jsx(DashboardItem, __assign({ withBackground: true, icon: "WirelessWorldConnection" }, { children: "WirelessWorldConnection" }), void 0) }), void 0)] }, void 0), _jsx(Loader, { size: "small", loaderSpeed: 0.2 }, void 0), _jsx(Loader, { size: "medium", loaderSpeed: 0.2 }, void 0), _jsx(Loader, { size: "large", loaderSpeed: 0.2 }, void 0), _jsx(Loader, { size: "large", text: "loading" }, void 0), _jsxs(Row, { children: [_jsx(Column, __assign({ cols: 2 }, { children: _jsx(Skeleton, {}, void 0) }), void 0), _jsx(Column, __assign({ cols: 2 }, { children: _jsx(Skeleton, { lines: 10 }, void 0) }), void 0), _jsx(Column, __assign({ cols: 2 }, { children: _jsx(Skeleton, { width: 50 }, void 0) }), void 0), _jsx(Column, __assign({ cols: 2 }, { children: _jsx(Skeleton, { height: 50 }, void 0) }), void 0), _jsx(Column, __assign({ cols: 2 }, { children: _jsx(Skeleton, { width: 50, height: 50, circle: true }, void 0) }), void 0)] }, void 0)] }, void 0), _jsxs(BottomBar, __assign({ id: "bottom", copyright: "\u00A9 " + new Date().getFullYear() + " R3. All rights reserved." }, { children: [_jsx("a", __assign({ rel: "noopener noreferrer", href: "/#", title: "Terms and Conditions" }, { children: "Terms and Conditions" }), void 0), _jsx("a", __assign({ rel: "noopener noreferrer", href: "/#", title: "Privacy Policy" }, { children: "Privacy Policy" }), void 0)] }), void 0), _jsx(Drawer, __assign({ position: "bottom", title: "Drawer Bottom", open: drawerBottomShow, onClose: function () { return setDrawerBottomShow(false); } }, { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam" }), void 0), _jsxs(Drawer, __assign({ position: "right", title: "Drawer Right", open: drawerRightShow, onClose: function () { return setDrawerRightShow(false); }, closeOnOutsideClick: true }, { children: ["Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam", _jsx(Button, __assign({ size: "small", variant: "secondary", onClick: function (event) { return openModal(event, setModalTwoShow); } }, { children: "Modal Two" }), void 0), _jsx(DateInput, { label: "date input", required: true, errorMessage: "ERROR", value: dateValue, minDate: new Date(), maxDate: new Date(2022, 11, 1), onChange: function (event) { return setDateValue(event[0] || null); } }, void 0), _jsx(DateTimeInput, { label: "date time input", value: dateTimeValue, minDate: new Date(), maxDate: new Date(2020, 11, 1), onChange: function (event) { return setDateTimeValue(event[0] || ''); } }, void 0)] }), void 0), _jsxs(Drawer, __assign({ position: "top", title: "Drawer Top", open: drawerTopShow, onClose: function () { return setDrawerTopShow(false); }, closeOnOutsideClick: true }, { children: ["Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam", _jsx(DateInput, { label: "date input", required: true, errorMessage: "ERROR", value: dateValue, minDate: new Date(), maxDate: new Date(2022, 11, 1), onChange: function (event) { return setDateValue(event[0] || null); } }, void 0), _jsx(DateTimeInput, { label: "date time input", value: dateTimeValue, minDate: new Date(), maxDate: new Date(2020, 11, 1), onChange: function (event) { return setDateTimeValue(event[0] || ''); } }, void 0)] }), void 0), _jsx(Drawer, __assign({ position: "left", title: "Drawer Left", open: drawerLeftShow, onClose: function () { return setDrawerLeftShow(false); } }, { children: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam" }), void 0)] }), void 0)] }), void 0));
};
export default ExamplesComponent;
//# sourceMappingURL=ComponentsPreview.js.map